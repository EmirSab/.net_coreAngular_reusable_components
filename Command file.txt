// za otvaranje Nuget galerry
ctrl+shift+p

//kreira solution
dotnet new sln

//kreira api
dotnet new webapi -o API

//dodati projekat u solution
dotnet sln add API

// Ako se desi greska u vezi certifikata
// crit: Microsoft.AspNetCore.Server.Kestrel[0]
// unjeti u cmd
dotnet dev-certs https --clean
dotnet dev-certs https
dotnet dev-certs https --trust

//start dotnet app
dotnet watch run

//dotnet-ef
dotnet tool install --global dotnet-ef --version 5.0.13

//Migrations
dotnet ef migrations add InitialCreate -o Data/Migrations

//db update
dotnet ef database update

//create gitignore file
dotnet new gitignore

//adding ngx-bootstrap
ng add ngx-bootstrap
npm install ngx-bootstrap --save

//add bootstrap
npm install bootstrap

//instal font-awesome
npm install font-awesome

// adding certificate

//drop db
dotnet ef database drop

//instalacija toostara
npm install ngx-toastr

//creating a docker container
docker run --name dev -e POSTGRE_USER=appuser -e POSTGRES_PASSWORD=Pa$$w0rd -p 5432:5432 -d postgres:latest

#region run and install postgress and pgadmin
@Medhini , @Neil @Miguel here is the solution

1.First get the docker installed on your machine


2.Docker Postgres container Install

docker run -p 5432:5432  --name container-postgresdb -e POSTGRES_PASSWORD=admin -d postgres



3.Docker PgAdmin container Install

docker run -p 5050:80  -e "PGADMIN_DEFAULT_EMAIL=name@example.com" -e "PGADMIN_DEFAULT_PASSWORD=admin"  -d dpage/pgadmin4



4. Finally here is the connectionstring you all have been waiting for

---------------------------------

host: host.docker.internal

database: postgres

user: postgres

password: admin

#endregion

//connection string
 "DefaultConnection": "Server=host.docker.internal; Username=postgres; Password=admin; Database=datingapp"